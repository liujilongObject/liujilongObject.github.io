import{_ as r,c as e,o,a4 as l}from"./chunks/framework.BifI6F28.js";const C=JSON.parse('{"title":"Cursor","description":"","frontmatter":{},"headers":[],"relativePath":"AI/cursor.md","filePath":"AI/cursor.md","lastUpdated":1735544487000}'),a={name:"AI/cursor.md"},t=l('<h1 id="cursor" tabindex="-1">Cursor <a class="header-anchor" href="#cursor" aria-label="Permalink to &quot;Cursor&quot;">​</a></h1><blockquote><p><a href="https://www.cursor.com/" target="_blank" rel="noreferrer">Cursor </a>是一款 AI 代码编辑器，它 fork 了 VS Code 的源代码，在此之上集成了 AI。不同于常见的编辑器插件 AI 应用， <code>Cursor</code>是一个独立的应用，它对代码编辑有完全的控制权，因此它可以使用 AI 来深度的提升编码体验。</p></blockquote><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><h3 id="tab" tabindex="-1">Tab <a class="header-anchor" href="#tab" aria-label="Permalink to &quot;Tab&quot;">​</a></h3><blockquote><p>根据上下文窗口中最新的改动记录，自动生成代码建议。</p></blockquote><ol><li><p>代码生成：根据最新的代码更改来预测下一步动作，以此生成推测后的代码建议</p><ol><li>e.g. 在 a 文件(组件)中新增了一个参数配置，在 b 文件中使用来自 a 文件的组件或方法时能够建议这个新的参数配置</li></ol></li><li><p>多行编辑：可以同时在多行代码上生成代码建议</p></li><li><p>错误纠正：自动纠正代码编写错误 (e.g. 单词错误，语法错误等)；<i style="color:#E37318;">注意：不包含代码逻辑错误</i></p></li><li><p><strong>光标预测</strong>：基于当前光标所在位置，预测用户下一个要改动的代码位置，用户可以连续 tab -&gt; tab -&gt; tab ... 来应用 AI 生成的代码。</p><ol><li>e.g. 修改了 a 处的一个变量名，会自动导航到代码中应用了这个变量的其他位置。</li></ol></li></ol><h3 id="chat" tabindex="-1">Chat <a class="header-anchor" href="#chat" aria-label="Permalink to &quot;Chat&quot;">​</a></h3><blockquote><p>指令： <code>Ctrl + L</code> ，侧边栏聊天</p><p>通过和 AI 聊天来生成代码，Cursor 默认包含当前文件作为上下文，基于更准确的上下文 ，语言模型会生成更准确的答案(代码)。</p><p><strong>Cursor 支持将整个代码库作为上下文。</strong></p></blockquote><h4 id="在聊天中添加不同的上下文" tabindex="-1">在聊天中添加不同的上下文 <a class="header-anchor" href="#在聊天中添加不同的上下文" aria-label="Permalink to &quot;在聊天中添加不同的上下文&quot;">​</a></h4><blockquote><p>指令：输入<code>@</code> 触发选项框，选择指令</p></blockquote><ul><li><p>添加指定文件 (Files)：可以选择当前项目目录中不同的文件来作为输入上下文</p></li><li><p>添加指定文件夹 (Folders)</p></li><li><p>添加当前文件中的代码块 (Code)</p></li><li><p><strong>添加代码库 (Codebase)</strong>：当前项目根目录，可以自定义 include/exclude 文件规则</p><ul><li><p>e.g. 可以分析整个代码库，让 AI 告诉你当前代码库中某个功能是如何实现的</p><ul><li>根据 AI 的代码分析和查找链路，可以比较清晰的看到代码中的调用链路</li></ul></li><li><p>e.g. 查找代码库中的指定内容</p></li><li><p>e.g. 辅助重构代码 （适用于 @Files）</p></li><li><p>e.g. 代码优化 （适用于 @Code）</p></li><li><p>...</p></li></ul></li></ul><h4 id="上传图片-cursor-会将图片信息包含在上下文中" tabindex="-1">上传图片，Cursor 会将图片信息包含在上下文中 <a class="header-anchor" href="#上传图片-cursor-会将图片信息包含在上下文中" aria-label="Permalink to &quot;上传图片，Cursor 会将图片信息包含在上下文中&quot;">​</a></h4><ul><li>e.g. 上传图片后可以输入提示词：编写代码(编写一个新的组件)，还原图片中的UI。</li></ul><h4 id="添加文档-基于指定文档提问" tabindex="-1">添加文档，基于指定文档提问 <a class="header-anchor" href="#添加文档-基于指定文档提问" aria-label="Permalink to &quot;添加文档，基于指定文档提问&quot;">​</a></h4><blockquote><p>指令：@Docs</p></blockquote><ul><li><p>Cursor 提供了一些技术栈的官方文档，用户可以直接将这些文档加入上下文使用</p></li><li><p>Cursor 也支持添加自定义文档，用户可以手动添加指定的文档(URL)，等待Cursor加载后就能使用</p></li></ul><h4 id="联网查询" tabindex="-1">联网查询 <a class="header-anchor" href="#联网查询" aria-label="Permalink to &quot;联网查询&quot;">​</a></h4><blockquote><p>指令：@Web</p></blockquote><ul><li>Cursor 会根据查询和用户提供的上下文构建搜索查询，并搜索网络以查找相关信息作为附加上下文</li></ul><p><strong>也可以在设置中启用 <code>Always search the web</code> , 可以让 Cursor 在每次聊天中都会结合联网查询来给出答案。这样也不需要再手动输入指令了</strong></p><h4 id="在编辑器中选中代码作为上下文" tabindex="-1">在编辑器中选中代码作为上下文 <a class="header-anchor" href="#在编辑器中选中代码作为上下文" aria-label="Permalink to &quot;在编辑器中选中代码作为上下文&quot;">​</a></h4><blockquote><p>指令：选中代码后 -&gt; <code>Ctrl + L</code></p></blockquote><ul><li>可以在代码编辑区域选中代码，并添加到聊天上下文中</li></ul><h4 id="使用-cursor-生成的代码" tabindex="-1">使用 Cursor 生成的代码 <a class="header-anchor" href="#使用-cursor-生成的代码" aria-label="Permalink to &quot;使用 Cursor 生成的代码&quot;">​</a></h4><ul><li>聊天区域生成的代码块中都在右上角包含了 <code>Apply</code> 按钮，点击后可以一键应用到对应的文件中(文件必须存在)。</li></ul><h3 id="ctrl-k" tabindex="-1">Ctrl K <a class="header-anchor" href="#ctrl-k" aria-label="Permalink to &quot;Ctrl K&quot;">​</a></h3><blockquote><p>简单版的 Chat，输入框内嵌在代码编辑区域</p></blockquote><ul><li><p>在 Cursor 代码编辑区域，在光标处或者选中代码后键入 <code>Ctrl + K</code> ： 在代码块上方会出现输入框，即可开始 AI 交互</p><ul><li>e.g. 可以选中一段代码，让 AI 解释这段代码的含义 或 优化这段代码</li></ul></li><li><p>在 Cursor 终端中使用：在终端中键入 <code>Ctrl + K</code> , 可以使用文字描述想要执行的指令，Cursor 会自动生成对应的命令行指令。(对于不熟悉的复杂命令比较有用)</p></li></ul><h3 id="composer" tabindex="-1">Composer <a class="header-anchor" href="#composer" aria-label="Permalink to &quot;Composer&quot;">​</a></h3><p><strong>在一个对话窗内用自然语言描述需求，可以新建、编辑多个文件，无需手动切换文件。</strong></p><blockquote><p>(Cursor 打开新的文件夹) 键入 <code>Ctrl + Shift + I</code> 打开 Composer 模式。在打开的聊天窗口中输入指令使 Cursor 完成工作。</p><p><code>Ctrl + I</code> 打开一个小的可缩放的 Composer 聊天窗口，可以更方便的拖动到屏幕各处, 同时可以方便的在编辑器中操作(e.g. 将生成的命令复制粘贴到终端中执行)。</p></blockquote><h4 id="新建文件夹-文件" tabindex="-1">新建文件夹/文件 <a class="header-anchor" href="#新建文件夹-文件" aria-label="Permalink to &quot;新建文件夹/文件&quot;">​</a></h4><ul><li>Composer 会根据指令生成代码，并且根据需要能自动在当前的工作目录中新建对应的文件夹或文件来写入 AI 生成的代码</li></ul><h4 id="连续的上下文" tabindex="-1">连续的上下文 <a class="header-anchor" href="#连续的上下文" aria-label="Permalink to &quot;连续的上下文&quot;">​</a></h4><ul><li><p>在 Composer 模式中，你可以连续的输入指令，Cursor 会保留完整的上下文历史。</p><ul><li>e.g. 基于某个功能实现，你可分步的输入指令来引导 AI 实现，过程中无需重复之前已输入过的指令</li></ul></li><li><p>如果你不需要在连续的上下文环境中，可以手动清除当前上下文。(点击Composer 面板刷新按钮 Reset Composer)</p></li></ul><h4 id="通过对话生成完整的应用" tabindex="-1">通过对话生成完整的应用 <a class="header-anchor" href="#通过对话生成完整的应用" aria-label="Permalink to &quot;通过对话生成完整的应用&quot;">​</a></h4><ul><li><p>在 Composer 模式下，可以不用编写代码就能生成完整的应用，大多数时间你都在与 AI 聊天，少数时候也需要手动复制/粘贴一些东西(e.g. 一些 Cursor 无法自动完成的脚本命令)。</p></li><li><p>可以上传图片，并让 Cursor 实现它</p></li><li><p>遇到程序运行错误时，你也可以将错误信息在聊天中直接发给 Cursor，Cursor 会处理它。</p></li></ul><h2 id="其他配置" tabindex="-1">其他配置 <a class="header-anchor" href="#其他配置" aria-label="Permalink to &quot;其他配置&quot;">​</a></h2><h4 id="rules-for-ai-理解为指定的提示词" tabindex="-1">Rules for AI (理解为指定的提示词) <a class="header-anchor" href="#rules-for-ai-理解为指定的提示词" aria-label="Permalink to &quot;Rules for AI (理解为指定的提示词)&quot;">​</a></h4><ul><li><p>可以在 Cursor 设置 -&gt; <code>Rules for AI</code> 中输入定制的 AI 指令，Cursor 会在聊天中应用这些指令。(这些指令可以是某方面的特殊要求，可以是对某些功能的强调)</p><ul><li>e.g. 让 Cursor 总是用中文回复用户： Always respond in 中文.</li></ul></li><li><p><code>.cursorrules</code> : 对于某项目有特殊要求的，可以在项目根目录下新建 <code>.cursorrules</code> 文件，Cursor 会在聊天中应用规则。</p></li></ul><h4 id="ignore-files" tabindex="-1">Ignore Files <a class="header-anchor" href="#ignore-files" aria-label="Permalink to &quot;Ignore Files&quot;">​</a></h4><p><strong>提供 Cursor 需要忽略的文件</strong></p><ul><li><p><code>.gitignore</code> : Cursor 会识别并应用 git 忽略文件 (<em>git项目中使用此文件即可</em>)</p></li><li><p><code>.cursorignore</code> : 语法和功能同 <code>.gitignore</code></p></li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><p><a href="https://cursor.directory/" target="_blank" rel="noreferrer">开发各类项目的 Cursor 规则集合</a></p></li><li><p>[Cursor Docs](<a href="https://docs.cursor.com/get-started/migrate-from-vscode" target="_blank" rel="noreferrer">Cursor - Build Software Faster</a>)</p></li></ul>',45),i=[t];function s(u,c,d,h,p,n){return o(),e("div",null,i)}const q=r(a,[["render",s]]);export{C as __pageData,q as default};
